function [trialSequence, codeIndices] = generateTrialSequence(targets,nonTargets,numTargets,numNonTargets,numLures)
%GENERATETRIALSEQUENCE Generates symbolic sequence.
%  Based on the indices generated by getTargetIndices, this functions
%  returns the symbolic sequence that is used during the experiment. It
%  also returns codeIndices, which includes codes for target, non-target,
%  and lure indices. 
%
%   Codes of trials in code indices:
%   1 - non-target trial
%   2 - target trial
%   3-  lure trial
%
%   INPUT: 
%       targets - set of target letters (e.g., 'xyz'),
%       nonTargets - set of non-target letters (e.g., 'abcdefg'),
%       numTargets - number of target trials,
%       numNonTargets - number of non-target trials,
%       numLures - number of lure trials
%
%   OUTPUT:
%       trialSequence - string of the letters to be presented,
%       codeIndices - codes for all trials (list made of 1, 2, and 3)

% num_lures = 0 for level 1 trials
if nargin < 5
    numLures = 0;
end
assert(numLures >= 0);

% count total number of targets and all trials
totalTargets = numTargets + numLures;
totalNumTrials = numNonTargets + totalTargets;

% compute non-target, target, and lure indices + codes for each trial
% see tools.getTargetIndices for info on codes
[targetIndices, lureIndices, codeIndices] = tools.getTargetIndices(totalNumTrials, totalTargets, numLures);

% initaite sequence of random non-target letters so that no letter is
% repeated 2 times in a row
randomSymbolsIndices = randi(numel(nonTargets),[1 totalNumTrials]);
while min(abs(diff(randomSymbolsIndices))) == 0
    randomSymbolsIndices = randi(numel(nonTargets),[1 totalNumTrials]);
end
trialSequence = nonTargets(randomSymbolsIndices);

% if Level 2 or 3, then we either take previous target symbol for lure
% trials, or get random letter from other available letters
if numLures > 0
    previousLetter = '-';
    for idx = 1:numel(targetIndices)
        targetIndex = targetIndices(idx);
        if ismember(targetIndex, lureIndices)
            prevTargetIndex = targetIndices(idx - 1);
            trialSequence(targetIndex) = trialSequence(prevTargetIndex);
        else
            availableTargets = erase(targets, previousLetter);
            randLetterIdx = randi(numel(availableTargets), [1 1]);
            trialSequence(targetIndex) = availableTargets(randLetterIdx);
            previousLetter = availableTargets(randLetterIdx);
        end
    end
else % if Level 1, it just randomly sets target letters for targetIndices
    randomTargetsIndices = randi(numel(targets),[1 totalTargets]);
    targetSubsequence = targets(randomTargetsIndices);
    trialSequence(targetIndices) = targetSubsequence;
end

end